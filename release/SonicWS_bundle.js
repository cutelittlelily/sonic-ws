(()=>{"use strict";var t,e;(e=t||(t={}))[e.NONE=0]="NONE",e[e.RAW=1]="RAW",e[e.STRINGS=2]="STRINGS",e[e.INTS_C=3]="INTS_C",e[e.INTS_D=4]="INTS_D",e[e.INTS_A=5]="INTS_A",e[e.DECIMALS=6]="DECIMALS",e[e.BOOLEANS=7]="BOOLEANS";class s{constructor(t){this.key=1,this.keys={},this.tags={},this.packets=t,this.packetMap={},this.createPackets(t)}createKey(t){t.includes(",")?console.log(`Tag "${t}" is invalid; keys cannot contain commas.`):(this.keys[t]=this.key,this.tags[this.key]=t,this.key++)}createPackets(t){for(const e of t)this.createKey(e.tag),this.packetMap[e.tag]=e}get(t){return this.keys[t]}getChar(t){return String.fromCharCode(this.get(t))}getPacket(t){return this.packetMap[t]}has(t){return null!=this.tags[t.charCodeAt(0)]}getKeys(){return this.keys}serialize(){return this.packets.map((t=>t.serialize())).join("")}static empty(){return new s([])}}class r{constructor(t,e){this.listener=e,this.packet=t}listen(t){try{if(!this.packet.validate(t))return!1;const e=this.packet.processReceive(t);return Array.isArray(e)&&!this.packet.dontSpread?this.listener(...e):this.listener(e),!0}catch(t){return console.error(t),!1}}}const n=String.fromCharCode(0),i=String.fromCharCode(1),a=String.fromCharCode(2),o=Math.floor(27647.5),h=o+1,c=[];function l(t){return t.split("").map((t=>t.charCodeAt(0)))}function d(t){return t<o?t:-t+o}function p(t){if(t>=o||t<-o-1)throw new Error(`INT_C Numbers must be within range -${o+1} and ${o}`);return String.fromCharCode(function(t){return t<0?-t+o:t}(t))}function u(t){if(0==t)return 1;let e=1,s=h;for(;t>=s;)e++,s*=h;return e}function g(t,e){if(0==t)return n;const s=t<0;t=Math.abs(t);let r="";for(let s=0;s<e-1;s++){const n=Math.pow(h,e-s-1),i=Math.floor(t/n);r+=String.fromCharCode(i),t-=i*n}return r+=String.fromCharCode(t%h),s?l(r).map((t=>String.fromCharCode(t>0?t+o:t))).join(""):r}function C(t){return f(l(t))}function f(t){return t.reduce(((t,e,s,r)=>t+d(e)*function(t){var e;return null!==(e=c[t])&&void 0!==e?e:c[t]=Math.pow(h,t)}(r.length-s-1)),0)}function S(t,e){return[...Array(Math.ceil(t.length/e))].map(((s,r)=>t.slice(r*e,r*e+e)))}new TextEncoder;const m=(t,e)=>{let s=0;for(let r=0;r<t.length;r++){if(s++,s>e)return!1;if(r+=t.charCodeAt(r),r+1>t.length)return!1}return!0},y={[t.NONE]:t=>""==t,[t.RAW]:()=>!0,[t.STRINGS]:m,[t.INTS_C]:(t,e)=>t.length==e,[t.INTS_D]:(t,e)=>t.length>0&&(l(t).length-1)%t[0].charCodeAt(0)<=e,[t.INTS_A]:m,[t.DECIMALS]:(t,e)=>{let s=0;for(let r=0;r<t.length;r++){if(s++,s>e)return!1;if(r+=t.charCodeAt(r)+1,r>t.length)return!1;if(r+=t.charCodeAt(r),r>t.length)return!1}return!0},[t.BOOLEANS]:(t,e)=>{const s=l(t);return s.length<=Math.floor(e/8)+1&&null==s.find((t=>t>255))}},v={[t.NONE]:t=>"",[t.RAW]:t=>t,[t.STRINGS]:t=>{let e=[];for(let s=0;s<t.length;s++){const r=t.charCodeAt(s);e.push(t.substring(s+1,s+1+r)),s+=r}return e},[t.INTS_C]:t=>l(t).map(d),[t.INTS_D]:t=>S(l(t.substring(1)),t.charCodeAt(0)).map((t=>String.fromCharCode(...t))).map(C),[t.INTS_A]:t=>{let e=[];for(let s=0;s<t.length;s++){const r=t.charCodeAt(s);e.push(C(t.substring(s+1,s+1+r))),s+=r}return e},[t.DECIMALS]:t=>{const e=l(t);let s=[];for(let t=0;t<e.length;){const r=e[t++],n=f(e.slice(t,t+r));t+=r;const i=e[t++],a=f(e.slice(t,t+i));t+=i,s.push(parseFloat(n+"."+a))}return s},[t.BOOLEANS]:(t,e)=>l(t).map((t=>{return e=t,[...Array(8)].map(((t,s)=>!!(e&1<<7-s)));var e})).flat().splice(0,e)},w={[t.NONE]:t=>"",[t.RAW]:t=>t.toString(),[t.STRINGS]:(...t)=>t.map((t=>String.fromCharCode(t.toString().length)+t)).join(""),[t.INTS_C]:(...t)=>t.map(p).join(""),[t.INTS_D]:(...t)=>{const e=t.reduce(((t,e)=>Math.max(t,u(e))),1),s=t.map((t=>g(t,e).padStart(e,n))).join("");return String.fromCharCode(e)+s},[t.INTS_A]:(...t)=>t.map((t=>{const e=u(t);return String.fromCharCode(e)+g(t,e)})).join(""),[t.DECIMALS]:(...t)=>t.map((t=>{const e=t.toString().split("."),s=parseFloat(e[0])||0,r=e.length>1&&parseFloat(e[1])||0,n=u(s),i=u(r);return String.fromCharCode(n)+g(s,n)+String.fromCharCode(i)+g(r,i)})).join(""),[t.BOOLEANS]:(...t)=>S(t,8).map((t=>String.fromCharCode(t.reduce(((t,e,s)=>t|e<<7-s),0)))).join("")};class k{constructor(t,e){this.tag=t,e.object?(this.type=e.types,this.dataCap=e.dataCaps,this.size=this.type.length,this.object=!0,this.receiveProcessor=function(t,e){const s=t.map((t=>v[t]));return t=>{let r=[];for(let n=0;n<t.length;){const i=t.charCodeAt(n++),a=t.substring(n,n+i);r.push(s[r.length](a,e[r.length])),n+=i}return r}}(this.type,this.dataCap),this.validifier=(this.type,this.dataCap,()=>!0),this.sendProcessor=function(t){const e=t.length,s=t.map((t=>w[t]));return(...t)=>{let r="";for(let n=0;n<e;n++){const e=s[n](...t[n]);r+=String.fromCharCode(e.length)+e}return r}}(this.type),this.processSend=(...t)=>this.sendProcessor(...t.flat())):(this.type=e.type,this.dataCap=e.dataCap,this.size=this.dataCap,this.object=!1,this.receiveProcessor=v[this.type],this.validifier=y[this.type],this.sendProcessor=w[this.type],this.processSend=(...t)=>this.sendProcessor(...t.flat())),this.processReceive=t=>this.receiveProcessor(t,this.dataCap),this.validate=t=>this.validifier(t,this.dataCap),this.dontSpread=e.dontSpread}serialize(){const t=this.dontSpread?a:i;return this.object?t+String.fromCharCode(this.size+2)+String.fromCharCode(...this.dataCap.map((t=>t+1)))+String.fromCharCode(...this.type.map((t=>t+1)))+String.fromCharCode(this.tag.length+1)+this.tag:t+i+String.fromCharCode(this.dataCap+1)+String.fromCharCode(this.type+1)+String.fromCharCode(this.tag.length+1)+this.tag}static deserialize(t,e){const s=t[e]==a,r=t.charCodeAt(e+1)-2;if(-1!=r){const n=e+2,i=n+r,a=i,o=a+r,h=o+1,c=l(t.substring(n,i)).map((t=>t-1)),d=l(t.substring(a,o)).map((t=>t-1)),p=t.charCodeAt(h-1)-1,u=t.substring(h,h+p);return[new k(u,A.object(d,c,s)),3+r+r+p]}const n=t.charCodeAt(e+2)-1,i=t.charCodeAt(e+3)-1,o=e+5,h=t.charCodeAt(o-1)-1,c=t.substring(o,o+h);return[new k(c,A.single(i,n,s)),5+h]}static deserializeAll(t){const e=[];let s=0;for(;s<t.length;){const[r,n]=this.deserialize(t,s);e.push(r),s+=n}return e}}class A{constructor(e){this.types=[],this.dataCaps=[],this.type=t.NONE,this.dataCap=-1,this.dontSpread=!1,this.object=e}static single(t,e,s){const r=new A(!1);return r.type=t,r.dataCap=e,r.dontSpread=s,r}static object(t,e,s){if(t.length!=e.length)throw new Error("There is an inbalance between types and datacaps!");const r=new A(!0);return r.types=t,r.dataCaps=e,r.dontSpread=s,r}}String.fromCharCode(2);class N{constructor(t){this.clientPackets=s.empty(),this.serverPackets=s.empty(),this.pastKeys=!1,this.readyListeners=[],this.ws=t,this.listeners={message:[],close:[],event:{}},this.preListen={},this.keyHandler=t=>this.serverKeyHandler(t),this.ws.addEventListener("message",this.keyHandler),this.ws.addEventListener("close",(t=>{this.listeners.close.forEach((e=>e(t)))}))}serverKeyHandler(t){const e=t.data.toString();if(!e.startsWith("SWS"))throw this.ws.close(1003),new Error("The server requested is not a Sonic WS server.");const s=e.charCodeAt(3);if(2!=s)throw this.ws.close(1003),new Error(`Version mismatch: ${s>2?"client":"server"} is outdated (server: ${s}, client: 2)`);const[i,a]=e.substring(4).split(n);this.clientPackets.createPackets(k.deserializeAll(i)),this.serverPackets.createPackets(k.deserializeAll(a)),Object.keys(this.preListen).forEach((t=>this.preListen[t].forEach((e=>{if(null==this.serverPackets.get(t))return console.error(new Error(`The server does not send the packet with tag "${t}"!`));const s=this.serverPackets.getPacket(t),n=new r(s,e);this.listen(t,n)})))),this.pastKeys=!0,this.readyListeners.forEach((t=>t())),this.ws.removeEventListener("message",this.keyHandler),this.ws.addEventListener("message",(t=>this.messageHandler(t)))}messageHandler(t){var e;let s=t.data.toString();if(this.listeners.message.forEach((t=>t(s))),s.length<1)return;const r=s.substring(0,1),n=s.substring(1),i=r.charCodeAt(0);null!=i&&(null===(e=this.listeners.event[i])||void 0===e||e.forEach((t=>{if(!t.listen(n))throw new Error("An error occured with data from the server!! This is probably my fault.. make an issue at https://github.com/cutelittlelily/sonic-ws")})))}listen(t,e){const s=this.serverPackets.get(t);s?(this.listeners.event[s]||(this.listeners.event[s]=[]),this.listeners.event[s].push(e)):console.log("Key is not available on server: "+t)}raw_onmessage(t){this.listeners.message.push(t)}raw_send(t){this.ws.send(t)}send(t,...e){!function(t,e,s,r){const i=t.getChar(s);if(i==n)throw new Error(`Tag "${s}" has not been created!`);const a=t.getPacket(s);if(r.length>a.size)throw new Error(`Packet "${s}" only allows ${a.size} values!`);e(i+a.processSend(r))}(this.clientPackets,(t=>this.raw_send(t)),t,e)}on_ready(t){this.pastKeys?t():this.readyListeners.push(t)}on_close(t){this.listeners.close.push(t)}on(t,e){if(this.ws.readyState!==WebSocket.OPEN)return this.preListen[t]||(this.preListen[t]=[]),void this.preListen[t].push(e);const s=this.serverPackets.getPacket(t),n=new r(s,e);this.listen(t,n)}}var E;window.SonicWS=((E=class extends N{constructor(t,e){super(new WebSocket(t,e))}}).PacketType=t,E)})();