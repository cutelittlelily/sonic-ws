(()=>{"use strict";const t={string:0,number:1,boolean:2,undefined:3,object:4},e={0:t=>t,1:t=>parseFloat(t),2:t=>"true"==t,3:()=>{},4:()=>null};class r{constructor(t,e){this.tag=t,this.index=e,this.encoded=String.fromCharCode(e)}}class s{constructor(t,e){this.tag=t,this.values=e}serialize(){return String.fromCharCode(this.tag.length+1)+this.tag+String.fromCharCode(this.values.length+1)+this.values.map((e=>String.fromCharCode(String(e).length+1)+String.fromCharCode(function(e){const r=typeof e;if(!(r in t)&&null!=e)throw new Error(`Cannot serialize type "${r}" in an enum!`);return t[r]}(e)+1)+e)).join("")}}const n={},i={};function a(t,e){if(e.length>128)throw new Error("An enum can only hold 128 possible values.");return n[t]=Object.fromEntries(e.map(((t,e)=>[t,e]))),i[t]=Object.fromEntries(e.map(((t,e)=>[e,t]))),new s(t,e)}var o,h;(h=o||(o={}))[h.NONE=0]="NONE",h[h.RAW=1]="RAW",h[h.STRINGS=2]="STRINGS",h[h.ENUMS=3]="ENUMS",h[h.INTS_C=4]="INTS_C",h[h.INTS_D=5]="INTS_D",h[h.INTS_A=6]="INTS_A",h[h.DECIMALS=7]="DECIMALS",h[h.BOOLEANS=8]="BOOLEANS";class c{constructor(t){this.key=1,this.keys={},this.tags={},this.packets=t,this.packetMap={},this.createPackets(t)}createKey(t){this.keys[t]=this.key,this.tags[this.key]=t,this.key++}createPackets(t){for(const e of t)this.createKey(e.tag),this.packetMap[e.tag]=e}get(t){return this.keys[t]}getChar(t){return String.fromCharCode(this.get(t))}getTag(t){return this.tags[t.charCodeAt(0)]}getPacket(t){return this.packetMap[t]}has(t){return t.charCodeAt(0)in this.tags}hasTag(t){return t in this.keys}getKeys(){return this.keys}getTags(){return this.tags}serialize(){return this.packets.map((t=>t.serialize())).join("")}static empty(){return new c([])}}class l{constructor(t,e){this.listener=e,this.packet=t}listen(t){let e;try{if(!this.packet.validate(t))return!1;e=this.packet.processReceive(t)}catch(t){return console.error("There was an error processing the packet! This is probably my fault... report at https://github.com/cutelittlelily/sonic-ws",t),!1}return Array.isArray(e)&&!this.packet.dontSpread?this.listener(...e):this.listener(e),!0}}const u=String.fromCharCode(0),d=String.fromCharCode(1),p=String.fromCharCode(2),g=Math.floor(27647.5),f=g+1,C=[];function m(t){return t.split("").map((t=>t.charCodeAt(0)))}function S(t){return t<=g?t:-t+g}function y(t){if(t>=g||t<-g-1)throw new Error(`INT_C Numbers must be within range -${g+1} and ${g}`);return String.fromCharCode(function(t){return t<0?-t+g:t}(t))}function w(t){if(0==t)return 1;let e=1,r=f;for(;t>=r;)e++,r*=f;return e}function A(t,e){if(0==t)return u;const r=t<0;t=Math.abs(t);let s="";for(let r=0;r<e-1;r++){const n=Math.pow(f,e-r-1),i=Math.floor(t/n);s+=String.fromCharCode(i),t-=i*n}return s+=String.fromCharCode(t%f),r?m(s).map((t=>String.fromCharCode(t>0?t+g:t))).join(""):s}function E(t){return v(m(t))}function v(t){return t.reduce(((t,e,r,s)=>t+S(e)*function(t){var e;return null!==(e=C[t])&&void 0!==e?e:C[t]=Math.pow(f,t)}(s.length-r-1)),0)}function N(t,e){return[...Array(Math.ceil(t.length/e))].map(((r,s)=>t.slice(s*e,s*e+e)))}new TextEncoder;const k=(t,e)=>{let r=0;for(let s=0;s<t.length;s++){if(r++,r>e)return!1;if(s+=t.charCodeAt(s),s+1>t.length)return!1}return!0},b={[o.NONE]:t=>""==t,[o.RAW]:()=>!0,[o.STRINGS]:k,[o.ENUMS]:(t,e,r,s)=>{if(t.length>e||s>=r.enumData.length)return!1;const n=r.enumData[s];for(let r=0;r<e;r++)if(n.values.length<=t.charCodeAt(r))return!1;return!0},[o.INTS_C]:(t,e)=>t.length==e,[o.INTS_D]:(t,e)=>t.length>0&&(m(t).length-1)%t[0].charCodeAt(0)<=e,[o.INTS_A]:k,[o.DECIMALS]:(t,e)=>{let r=0;for(let s=0;s<t.length;s++){if(r++,r>e)return!1;if(s+=t.charCodeAt(s)+1,s>t.length)return!1;if(s+=t.charCodeAt(s),s>t.length)return!1}return!0},[o.BOOLEANS]:(t,e)=>{const r=m(t);return r.length<=Math.floor(e/8)+1&&null==r.find((t=>t>255))}},T={[o.NONE]:t=>"",[o.RAW]:t=>t,[o.STRINGS]:t=>{let e=[];for(let r=0;r<t.length;r++){const s=t.charCodeAt(r);e.push(t.substring(r+1,r+1+s)),r+=s}return e},[o.ENUMS]:(t,e,r,s)=>{const n=r.enumData[s];return m(t).map((t=>n.values[t]))},[o.INTS_C]:t=>m(t).map(S),[o.INTS_D]:t=>N(m(t.substring(1)),t.charCodeAt(0)).map((t=>String.fromCharCode(...t))).map(E),[o.INTS_A]:t=>{let e=[];for(let r=0;r<t.length;r++){const s=t.charCodeAt(r);e.push(E(t.substring(r+1,r+1+s))),r+=s}return e},[o.DECIMALS]:t=>{const e=m(t);let r=[];for(let t=0;t<e.length;){const s=e[t++],n=v(e.slice(t,t+s));t+=s;const i=e[t++],a=v(e.slice(t,t+i));t+=i,r.push(parseFloat(n+"."+a))}return r},[o.BOOLEANS]:(t,e)=>m(t).map((t=>{return e=t,[...Array(7)].map(((t,r)=>!!(e&1<<6-r)));var e})).flat().splice(0,e)},M={[o.NONE]:t=>"",[o.RAW]:t=>t.toString(),[o.STRINGS]:(...t)=>t.map((t=>String.fromCharCode(t.toString().length)+t)).join(""),[o.ENUMS]:(...t)=>t.map((t=>t.encoded)).join(""),[o.INTS_C]:(...t)=>t.map(y).join(""),[o.INTS_D]:(...t)=>{const e=t.reduce(((t,e)=>Math.max(t,w(e))),1),r=t.map((t=>A(t,e).padStart(e,u))).join("");return String.fromCharCode(e)+r},[o.INTS_A]:(...t)=>t.map((t=>{const e=w(t);return String.fromCharCode(e)+A(t,e)})).join(""),[o.DECIMALS]:(...t)=>t.map((t=>{const e=t.toString().split("."),r=parseFloat(e[0])||0,s=e.length>1&&parseFloat(e[1])||0,n=w(r),i=w(s);return String.fromCharCode(n)+A(r,n)+String.fromCharCode(i)+A(s,i)})).join(""),[o.BOOLEANS]:(...t)=>N(t,7).map((t=>String.fromCharCode(t.reduce(((t,e,r)=>t|e<<6-r),0)))).join("")};class P{constructor(t,e){this.tag=t,e.object?(this.type=e.types,this.dataCap=e.dataCaps,this.size=this.type.length,this.object=!0,this.receiveProcessor=function(t){const e=t.map((t=>T[t]));return(r,s,n)=>{let i=[],a=0;for(let h=0;h<r.length;){const c=r.charCodeAt(h++),l=r.substring(h,h+c);i.push(e[i.length](l,s[i.length],n,t[i.length]==o.ENUMS?a++:0)),h+=c}return i}}(this.type),this.validifier=function(t){const e=t.map((t=>b[t]));return(r,s,n)=>{let i=0,a=0;for(let h=0;h<r.length;){const c=r.charCodeAt(h++);if(c+h>r.length)return!1;const l=r.slice(h,h+=c);if(!e[i](l,s[i],n,t[i]==o.ENUMS?a++:0))return!1;if(++i>s.length)return!1}return!0}}(this.type),this.sendProcessor=function(t){const e=t.length,r=t.map((t=>M[t]));return(...t)=>{let s="";for(let n=0;n<e;n++){const e=r[n](...t[n]);s+=String.fromCharCode(e.length)+e}return s}}(this.type),this.processSend=(...t)=>this.sendProcessor(...t.flat())):(this.type=e.type,this.dataCap=e.dataCap,this.size=this.dataCap,this.object=!1,this.receiveProcessor=T[this.type],this.validifier=b[this.type],this.sendProcessor=M[this.type],this.processSend=(...t)=>this.sendProcessor(...t.flat())),this.processReceive=t=>this.receiveProcessor(t,this.dataCap,this,0),this.validate=t=>this.validifier(t,this.dataCap,this,0),this.enumData=e.enumData,this.dontSpread=e.dontSpread}serialize(){const t=this.dontSpread?p:d,e=String.fromCharCode(this.enumData.length+1)+this.enumData.map((t=>t.serialize())).join("");return this.object?t+e+String.fromCharCode(this.size+2)+String.fromCharCode(...this.dataCap.map((t=>t+1)))+String.fromCharCode(...this.type.map((t=>t+1)))+String.fromCharCode(this.tag.length+1)+this.tag:t+e+d+String.fromCharCode(this.dataCap+1)+String.fromCharCode(this.type+1)+String.fromCharCode(this.tag.length+1)+this.tag}static deserialize(t,r){const s=r,n=t[r]==p,i=t.charCodeAt(++r)-1,h=[];for(let s=0;s<i;s++){const s=t.charCodeAt(++r)-1,n=t.slice(++r,r+=s);r--;const i=t.charCodeAt(++r)-1,o=[];for(let s=0;s<i;s++){const s=t.charCodeAt(++r)-1,n=t.charCodeAt(++r)-1,i=t.slice(++r,r+=s);r--,o.push(e[n](i))}h.push(a(n,o))}const c=t.charCodeAt(++r)-2;if(-1!=c){const e=++r,i=e+c,a=i,l=a+c,u=l+1,d=m(t.substring(e,i)).map((t=>t-1)),p=m(t.substring(a,l)).map((t=>t-1));let g=0;const f=p.map((t=>t==o.ENUMS?h[g++]:t)),C=t.charCodeAt(u-1)-1,S=t.substring(u,u+C);return[new P(S,I.object(f,d,n)),r-s+1+c+c+C]}const l=t.charCodeAt(++r)-1,u=t.charCodeAt(++r)-1,d=u==o.ENUMS?h[0]:u,g=++r,f=t.charCodeAt(g)-1,C=t.substring(g+1,g+1+f);return[new P(C,I.single(d,l,n)),r-s+1+f]}static deserializeAll(t){const e=[];let r=0;for(;r<t.length;){const[s,n]=this.deserialize(t,r);e.push(s),r+=n}return e}}class I{constructor(t){this.types=[],this.dataCaps=[],this.enumData=[],this.type=o.NONE,this.dataCap=-1,this.dontSpread=!1,this.object=t}static single(t,e,r){const s=new I(!1);return"number"==typeof t?s.type=t:(s.type=o.ENUMS,s.enumData=[t]),s.dataCap=e,s.dontSpread=r,s}static object(t,e,r){if(t.length!=e.length)throw new Error("There is an inbalance between types and datacaps!");const s=new I(!0);return t.forEach((t=>{"number"==typeof t?s.types.push(t):(s.types.push(o.ENUMS),s.enumData.push(t))})),s.dataCaps=e,s.dontSpread=r,s}}String.fromCharCode(3);class L{constructor(t){this.clientPackets=c.empty(),this.serverPackets=c.empty(),this.pastKeys=!1,this.readyListeners=[],this.ws=t,this.listeners={message:[],close:[],event:{}},this.preListen={},this.keyHandler=t=>this.serverKeyHandler(t),this.ws.addEventListener("message",this.keyHandler),this.ws.addEventListener("close",(t=>{this.listeners.close.forEach((e=>e(t)))}))}serverKeyHandler(t){const e=t.data.toString();if(!e.startsWith("SWS"))throw this.ws.close(1003),new Error("The server requested is not a Sonic WS server.");const r=e.charCodeAt(3);if(3!=r)throw this.ws.close(1003),new Error(`Version mismatch: ${r>3?"client":"server"} is outdated (server: ${r}, client: 3)`);const[s,n]=e.substring(4).split(u);this.clientPackets.createPackets(P.deserializeAll(s)),this.serverPackets.createPackets(P.deserializeAll(n)),Object.keys(this.preListen).forEach((t=>this.preListen[t].forEach((e=>{if(null==this.serverPackets.get(t))return console.error(new Error(`The server does not send the packet with tag "${t}"!`));const r=this.serverPackets.getPacket(t),s=new l(r,e);this.listen(t,s)})))),this.pastKeys=!0,this.readyListeners.forEach((t=>t())),this.ws.removeEventListener("message",this.keyHandler),this.ws.addEventListener("message",(t=>this.messageHandler(t)))}messageHandler(t){var e;let r=t.data.toString();if(this.listeners.message.forEach((t=>t(r))),r.length<1)return;const s=r.substring(0,1),n=r.substring(1),i=s.charCodeAt(0);null!=i&&(null===(e=this.listeners.event[i])||void 0===e||e.forEach((t=>{if(!t.listen(n))throw new Error("An error occured with data from the server!! This is probably my fault.. make an issue at https://github.com/cutelittlelily/sonic-ws")})))}listen(t,e){const r=this.serverPackets.get(t);r?(this.listeners.event[r]||(this.listeners.event[r]=[]),this.listeners.event[r].push(e)):console.log("Key is not available on server: "+t)}raw_onmessage(t){this.listeners.message.push(t)}raw_send(t){this.ws.send(t)}send(t,...e){!function(t,e,r,s){const n=t.getChar(r);if(n==u)throw new Error(`Tag "${r}" has not been created!`);const i=t.getPacket(r);if(s.length>i.size)throw new Error(`Packet "${r}" only allows ${i.size} values!`);e(n+i.processSend(s))}(this.clientPackets,(t=>this.raw_send(t)),t,e)}on_ready(t){this.pastKeys?t():this.readyListeners.push(t)}on_close(t){this.listeners.close.push(t)}on(t,e){if(this.ws.readyState!==WebSocket.OPEN)return this.preListen[t]||(this.preListen[t]=[]),void this.preListen[t].push(e);const r=this.serverPackets.getPacket(t),s=new l(r,e);this.listen(t,s)}}var j;window.SonicWS=((j=class extends L{constructor(t,e){super(new WebSocket(t,e))}static WrapEnum(t,e){return function(t,e){if(!(e in n[t]))throw new Error(`Value "${e}" does not exist in enum "${t}"`);return new r(t,n[t][e])}(t,e)}}).PacketType=o,j)})();