/*!
 * SonicWS
 * (c) 2025 Lily (liwybloc)
 * Released under the Apache-2.0 License
 * https://www.apache.org/licenses/LICENSE-2.0
 */
(()=>{"use strict";function t(t,e){const r=[];for(let n=0;n<t.length;n+=e)r.push(t.slice(n,n+e));return r}const e=255,r=Math.floor(127.5),n=r+1,s=65535,a=(Math.floor(32767.5),Number.MAX_SAFE_INTEGER),i=r+1,o=Math.floor(r/2)+1,h=Math.pow(i,7)-1,c=Math.floor(h/2),u=[],l=t=>{var e;return null!==(e=u[t])&&void 0!==e?e:u[t]=Math.pow(n,t)},f=[],d=t=>{var e;return null!==(e=f[t])&&void 0!==e?e:f[t]=Math.pow(i,t)},p=[],g=t=>{var e;return null!==(e=p[t])&&void 0!==e?e:p[t]=Math.pow(2,t)};for(let t=0;t<=3;t++)l(t),d(t),g(t);function m(t){return 256*t[0]+t[1]}function S(t){if(!isFinite(t))throw new Error("Can only use real numbers in shorts: "+t);if(t>s||t<0)throw new Error("Short Numbers must be within range 0 and 65535");return[Math.floor(t/256),t%256]}function y(t){if(!isFinite(t))throw new Error("Can only use real numbers in bytes: "+t);if(t>e||t<-256)throw new Error(`Byte Numbers must be within range -256 and 255: ${t}`);return t}function w(t,e){t=Math.abs(t);let r=1;for(let n=e(1);t>=n;n=e(++r));return r}w(a,l);function v(t,e,r,n,s){if(!isFinite(t))throw new Error("Cannot use a non-finite number: "+t);if(0==t)return Array.from({length:e}).map((()=>0));if(1==e)return[t];const i=t<0;if((t=Math.abs(t))>a)throw new Error(`Non-float numbers must be within range -${a.toLocaleString()} and ${a.toLocaleString()}: ${t}`);let o=[];const h=e-1;for(let e=0;e<h;e++){const r=s(h-e),n=Math.floor(t/r);o.push(n),t-=n*r}o.push(t%n);return i?o.map((t=>t>0?t+r:t)):o}function T(t){return Number("0b"+t)}function E(e,r,n){return t(e.toString(2)+r.toString(2).padStart(8,"0")+n.toString(2).padStart(23,"0"),8).map((t=>T(t)))}function b(t){if(isNaN(t))return E(0,255,4919);const e=t<0?1:0;if(0==(t=Math.abs(t)))return E(e,0,0);const r=Math.floor(Math.log(t)/Math.LN2);if(r>127||r<-126)return E(e,255,0);const n=t/g(r);return E(e,r+127,8388607&Math.round((n-1)*g(23)))}function k(t){const e=t.map((t=>t.toString(2).padStart(8,"0"))).join(""),r=T(e[0]),n=T(e.slice(1,9)),s=0===n?-126:n-127;return(0==r?1:-1)*function(t,e){const r=T(t);let n=0;for(let t=0;t<23;t++)r&1<<23-t-1&&(n+=g(-(t+1)));return(e?1:0)+n}(e.slice(9,32),0!==n)*g(s)}function M(t){return t<<1^t>>15}function N(t){return t>>>1^-(1&t)}function A(t){return S(M(t))}function P(t){if(t>h||t<0)throw new Error(`Variable Ints must be within range 0 and ${c}: ${t}`);return v(t,w(t,d),o,i,d).map(((t,e)=>0==e?t:128|t)).reverse()}function I(t,e){let r,n=[];do{const s=t[e++];r=!!(128&s),n.push(r?128^s:s)}while(r);return[e,n.reduce(((t,e,r)=>t+e*d(r)),0)]}function B(t){return Array.from(t,(t=>t.codePointAt(0)))}function R(t){return String.fromCodePoint(...t)}function U(t){return t>=55296&&t<=57343}function O(t){if(t<=65535){if(U(t))throw new Error(`Cannot send code point ${t}; must be out of range 55296 and 57343`);return[t]}if(t>1114111)throw new Error(`Cannot send code ${t}`);return[55296+((t-=65536)>>10),56320+(1023&t)]}const x={string:0,number:1,boolean:2,undefined:3,object:4},L={0:t=>t,1:t=>parseFloat(t),2:t=>"true"==t,3:()=>{},4:()=>null};function $(t){const e=typeof t;if(!(e in x)&&null!=t)throw new Error(`Cannot serialize type "${e}" in an enum!`);return x[e]}class z{constructor(t,e){this.tag=t,this.values=e}serialize(){const t=B(this.tag);return[this.tag.length,...t,this.values.length,...this.values.map((t=>[String(t).length,$(t),...B(String(t))])).flat()]}}const F={},D={};function H(t,e){if(e.length>255)throw new Error("An enum can only hold 255 possible values.");return F[t]=Object.fromEntries(e.map(((t,e)=>[t,e]))),D[t]=Object.fromEntries(e.map(((t,e)=>[e,t]))),new z(t,e)}var _;function V(t,e){const r=new Uint8Array(1+e.length);return r[0]=t,r.set(e,1),r}function C(e,r){return t(Array.from(e),r)}function K(t){return R(Array.from(t))}function j(t){return function(t){let e=[];for(let r=0;r<t.length;r++){const n=t[r];if(U(n)){if(r==t.length-1)throw new Error(`Terminated surrogate pair; index ${r} value ${n}`);const s=t[++r];if(!U(s))throw new Error(`Terminated surrogate pair; index ${r} value ${n} next value ${s}`);e.push(1024*(n-55296)+(s-56320)+65536)}else e.push(n)}return R(e)}(C(t,2).map((t=>m(t))))}function G(t,e){return r=>r.length>=e&&r.length<=t}function W(t,e){return e*=2,t*=2,r=>r.length>=e&&r.length<=t&&r.length%2==0}function Y(t,e){return r=>{if(0==r.length)return!1;let n=0,s=0,a=[];for(;s<r.length;){const[e,i]=I(r,s);if(s=e,a.push(i),++n>t)return!1}return!(n<e)&&a}}function q(t,e,r,n){switch(t){case _.NONE:return t=>0==t.length;case _.RAW:return()=>{};case _.ENUMS:return(t,s)=>{if(t.length<r||t.length>e||s>=n.length)return!1;const a=n[s];for(let e=0;e<t.length;e++)if(a.values.length<=t[e])return!1};case _.BYTES:case _.UBYTES:return G(e,r);case _.SHORTS:case _.USHORTS:return W(e,r);case _.VARINT:case _.UVARINT:case _.DELTAS:return Y(e,r);case _.FLOAT:return t=>{if(t.length%4!=0)return!1;const n=t.length/4;return!(n>e||n<r)&&void 0};case _.BOOLEANS:{const t=Math.floor(r/8),n=Math.floor(e/8);return e=>e.length>=t&&e.length<=n}case _.STRINGS_ASCII:return t=>{let n=0,s=0,a=[];for(;s<t.length;){if(n++,n>e)return!1;const[r,i]=I(t,s);if(s=r+i,a.push(i),s>t.length)return!1}return!(n<r)&&a};case _.STRINGS_UTF16:return t=>{let n=0,s=0,a=[];for(;s<t.length;){if(n++,n>e)return!1;const[r,i]=I(t,s);if(s=r+2*i,a.push(i),s>t.length)return!1}return!(n<r)&&a};default:throw new Error("Unknown type: "+t)}}function J(t,e,r){switch(t){case _.NONE:return()=>{};case _.RAW:return t=>t;case _.BYTES:return t=>Array.from(t).map(N);case _.UBYTES:return t=>Array.from(t);case _.SHORTS:return t=>C(t,2).map((t=>N(m(t))));case _.USHORTS:return t=>C(t,2).map((t=>m(t)));case _.VARINT:return(t,e)=>e.map(N);case _.UVARINT:return(t,e)=>e;case _.DELTAS:return(t,e)=>e.map(((t,r)=>e[r]=(e[r-1]||0)+N(t)));case _.FLOAT:return t=>C(t,4).map(k);case _.BOOLEANS:return t=>Array.from(t).map((t=>{return e=t,[...Array(8)].map(((t,r)=>!!(e&1<<7-r)));var e})).flat().splice(0,r);case _.ENUMS:return(t,r,n)=>{const s=e[n];return Array.from(t).map((t=>s.values[t]))};case _.STRINGS_ASCII:return(t,e)=>{let r=0;return e.map((e=>K(t.subarray(++r,r+=e))))};case _.STRINGS_UTF16:return(t,e)=>{let r=0;return e.map((e=>j(t.subarray(++r,r+=2*e))))};default:throw new Error("Unknown type: "+t)}}function X(r){switch(r){case _.NONE:return()=>[];case _.RAW:return t=>Array.from(t);case _.ENUMS:return t=>t;case _.BYTES:return t=>t.map(M);case _.UBYTES:return t=>t.map(y);case _.SHORTS:return t=>t.map(A).flat();case _.USHORTS:return t=>t.map(S).flat();case _.VARINT:return t=>t.map((t=>P(M(t)))).flat();case _.UVARINT:return t=>t.map(P).flat();case _.DELTAS:return t=>t.map(((e,r)=>P(M(e-(t[r-1]||0))))).flat();case _.FLOAT:return t=>t.map(b).flat();case _.BOOLEANS:return e=>t(e,8).map((t=>t.reduce(((t,e,r)=>t|e<<7-r),0))).flat();case _.STRINGS_ASCII:return t=>{const r=[];for(const n of t){const t=String(n);r.push(...P(t.length));const s=B(t),a=s.find((t=>t>e));if(a)throw new Error(`Cannot store code ${a} (${String.fromCharCode(a)}) in a UTF-8 String! Use STRINGS_UTF16.`);s.map((t=>r.push(t)))}return r};case _.STRINGS_UTF16:return t=>{const e=[];for(const r of t){const t=String(r);e.push(...P(t.length)),B(t).map((t=>e.push(...O(t).map((t=>S(t))).flat())))}return e};default:throw new Error("Unknown type: "+r)}}!function(t){t[t.NONE=0]="NONE",t[t.RAW=1]="RAW",t[t.STRINGS_ASCII=2]="STRINGS_ASCII",t[t.STRINGS_UTF16=3]="STRINGS_UTF16",t[t.STRINGS=2]="STRINGS",t[t.ENUMS=4]="ENUMS",t[t.BYTES=5]="BYTES",t[t.UBYTES=6]="UBYTES",t[t.SHORTS=7]="SHORTS",t[t.USHORTS=8]="USHORTS",t[t.VARINT=9]="VARINT",t[t.UVARINT=10]="UVARINT",t[t.DELTAS=11]="DELTAS",t[t.FLOAT=12]="FLOAT",t[t.BOOLEANS=13]="BOOLEANS"}(_||(_={}));class Q{constructor(t,e,r,n,s){this.tag=t,this.defaultEnabled=n,this.client=s,this.enumData=e.enumData,this.rateLimit=e.rateLimit,this.dontSpread=e.dontSpread,this.autoFlatten=e.autoFlatten,this.dataBatching=e.dataBatching,this.maxBatchSize=s?1/0:e.maxBatchSize,this.object=e.object,this.object?(this.type=e.types,this.dataMax=e.dataMaxes,this.dataMin=e.dataMins,this.maxSize=this.type.length,this.minSize=this.type.length,this.receiveProcessor=function(t){const e=t.type,r=t.dataMax,n=e.map(((e,n)=>J(e,t.enumData,r[n])));return(t,r)=>{let s=0,a=0,i=[];for(;s<t.length;){const[o,h]=I(t,s);s=o;const c=t.subarray(s,s+=h);i.push(n[i.length](c,r[i.length],e[i.length]==_.ENUMS?a++:0))}return i}}(this),this.validator=function(t){const e=t.type,r=t.dataMax,n=t.dataMin,s=e.map(((e,s)=>q(e,r[s],n[s],t.enumData)));return t=>{let r=0,n=0,a=[];for(;r<t.length;){if(a.length>e.length)return!1;const[i,o]=I(t,r);if(r=i,o+r>t.length)return!1;const h=t.subarray(r,r+=o),c=s[a.length](h,e[a.length]==_.ENUMS?n++:0);if(0==c)return!1;a.push(c)}return a}}(this),this.sendProcessor=function(t){const e=t.type,r=e.length,n=e.map((t=>X(t)));return t=>{let e=[];for(let s=0;s<r;s++){const r=t[s],a=n[s](Array.isArray(r)?r:[r]);if(a.length>h)throw new Error(`Cannot send ${a.length}/${h} bytes of data!`);e.push(...P(a.length)),a.forEach((t=>e.push(t)))}return e}}(this)):(this.type=e.type,this.dataMax=e.dataMax,this.dataMin=e.dataMin,this.maxSize=this.dataMax,this.minSize=this.dataMin,this.receiveProcessor=J(this.type,this.enumData,this.dataMax),this.validator=q(this.type,this.dataMax,this.dataMin,this.enumData),this.sendProcessor=X(this.type)),this.processReceive=(t,e)=>this.receiveProcessor(t,e,0),this.processSend=t=>this.sendProcessor(t),this.validate=t=>this.validator(t,0),this.customValidator=r}listen(t,e){try{const r=this.validate(t);if(!this.client&&0==r)return"Invalid packet";const n=this.processReceive(t,r),s=this.autoFlatten?et(n):n;if(null!=this.customValidator)if(this.dontSpread){if(!this.customValidator(e,s))return"Didn't pass custom validator"}else if(!this.customValidator(e,...s))return"Didn't pass custom validator";return[s,!this.dontSpread]}catch(t){return console.error("There was an error processing the packet! This is probably my fault... report at https://github.com/cutelittlelily/sonic-ws",t),"Error: "+t}}serialize(){const t=[this.tag.length,...B(this.tag),this.dontSpread?1:0,this.dataBatching,this.enumData.length,...this.enumData.map((t=>t.serialize())).flat()];return this.object?[...t,this.maxSize+1,this.autoFlatten?1:0,...this.dataMax.map(P).flat(),...this.dataMin.map(P).flat(),...this.type,this.tag.length]:[...t,0,...P(this.dataMax),...P(this.dataMin),this.type]}static readVarInts(t,e,r){const n=[];for(let s=0;s<r;s++){const[r,s]=I(t,e);e=r,n.push(s)}return[n,e]}static deserialize(t,e,r){const n=e,s=t[e++],a=K(t.slice(e,e+=s)),i=1==t[e++],o=t[e++],h=t[e++],c=[];for(let r=0;r<h;r++){const r=t[e++],n=K(t.slice(e,e+=r)),s=t[e++],a=[];for(let r=0;r<s;r++){const r=t[e++],n=t[e++],s=K(t.slice(e,e+=r));a.push(L[n](s))}c.push(H(n,a))}const u=t[e++]-1;if(-1!=u){const s=1==t[e++],[h,l]=this.readVarInts(t,e,u);e=l;const[f,d]=this.readVarInts(t,e,u);e=d;const p=Array.from(t.slice(e,e+=u));let g=0;const m=p.map((t=>t==_.ENUMS?c[g++]:t)),S=Z.object(m,h,f,i,s,o,-1,-1);return[new Q(a,S,null,!1,r),e-n+1]}const[l,f]=I(t,e);e=l;const[d,p]=I(t,e),g=t[e=d],m=g==_.ENUMS?c[0]:g,S=Z.single(m,f,p,i,o,-1,-1);return[new Q(a,S,null,!1,r),e-n+1]}static deserializeAll(t,e){const r=[];let n=0;for(;n<t.length;){const[s,a]=this.deserialize(t,n,e);r.push(s),n+=a}return r}}class Z{constructor(t){this.types=[],this.dataMaxes=[],this.dataMins=[],this.type=_.NONE,this.dataMax=-1,this.dataMin=-1,this.dataBatching=0,this.maxBatchSize=10,this.rateLimit=0,this.enumData=[],this.dontSpread=!1,this.autoFlatten=!1,this.object=t}static single(t,e,r,n,s,a,i){const o=new Z(!1);return"number"==typeof t?(o.type=t,t==_.NONE&&(e=r=0)):(o.type=_.ENUMS,o.enumData=[t]),o.dataMax=e,o.dataMin=r,o.dontSpread=n,o.dataBatching=s,o.maxBatchSize=a,o.rateLimit=i,o}static object(t,e,r,n,s,a,i,o){if(t.length!=e.length||t.length!=r.length)throw new Error("There is an inbalance between the amount of types, data maxes, and data mins!");const h=new Z(!0);return t.forEach((t=>{"number"==typeof t?h.types.push(t):(h.types.push(_.ENUMS),h.enumData.push(t))})),h.dataMaxes=e,h.dataMins=r,h.dontSpread=n,h.autoFlatten=s,h.dataBatching=a,h.maxBatchSize=i,h.rateLimit=o,h}}function tt(t){var e;if(null==t)return[];const r=t[0];if(null==r)return[];if(!Array.isArray(r))throw new Error(`Cannot flatten array: ${t}`);return null!==(e=r.map(((e,r)=>t.map((t=>t[r])))))&&void 0!==e?e:[]}function et(t){var e,r;return null!==(r=null===(e=t[0])||void 0===e?void 0:e.map(((e,r)=>t.map((t=>t[r])))))&&void 0!==r?r:[]}class rt{constructor(t){this.key=0,this.keys={},this.tags={},this.packetMap={},t&&(this.packets=t,this.holdPackets(t))}createKey(t){this.keys[t]=this.key,this.tags[this.key]=t,this.key++}holdPackets(t){for(const e of t)this.createKey(e.tag),this.packetMap[e.tag]=e}getKey(t){if(!(t in this.keys))throw new Error(`Not a valid tag: ${t}`);return this.keys[t]}getTag(t){return this.tags[t]}getPacket(t){if(!(t in this.packetMap))throw new Error("Unknown packet tag: "+t);return this.packetMap[t]}hasKey(t){return t in this.tags}hasTag(t){return t in this.keys}getKeys(){return this.keys}getTagMap(){return this.tags}getTags(){return Object.values(this.tags)}getPackets(){return this.packets}serialize(){return this.packets.map((t=>t.serialize())).flat()}}B("SWS");class nt{constructor(){this.batchTimes={},this.batchTimeouts={},this.batchedData={}}registerSendPackets(t,e){this.conn=e,t.getTags().forEach((e=>{const r=t.getPacket(e);if(0==r.dataBatching)return;const n=t.getKey(e);this.initiateBatch(n,r.dataBatching)}))}initiateBatch(t,e){this.batchedData[t]=[],this.batchTimes[t]=e}startBatch(t){this.batchTimeouts[t]=this.conn.setTimeout((()=>{this.conn.raw_send(V(t,this.batchedData[t])),this.batchedData[t]=[],delete this.batchTimeouts[t]}),this.batchTimes[t])}batchPacket(t,e){const r=this.batchedData[t];r.push(...P(e.length)),e.forEach((t=>r.push(t))),this.batchTimeouts[t]||this.startBatch(t)}static unravelBatch(t,e,r){const n=[];for(let s=0;s<e.length;){if(t.maxBatchSize>0&&n.length>t.maxBatchSize)return"Too big of batch";const[a,i]=I(e,s);if(s=a,s+i>e.length)return"Tampered batch length";const o=e.slice(s,s+=i),h=t.listen(o,r);if("string"==typeof h)return"Batched packet: "+h;n.push([h[0],!t.dontSpread])}return n}}var st=function(t,e,r,n){return new(r||(r=Promise))((function(s,a){function i(t){try{h(n.next(t))}catch(t){a(t)}}function o(t){try{h(n.throw(t))}catch(t){a(t)}}function h(t){var e;t.done?s(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(i,o)}h((n=n.apply(t,e||[])).next())}))};class at{constructor(t,e){this.clientPackets=new rt,this.serverPackets=new rt,this.pastKeys=!1,this.readyListeners=[],this.id=-1,this._timers={},this.reading=!1,this.socket=t,this.listeners={message:[],close:[],event:{}},this.preListen={},this.batcher=new nt,this.invalidPacket=this.invalidPacket.bind(this),this.serverKeyHandler=this.serverKeyHandler.bind(this),this.messageHandler=this.messageHandler.bind(this),this.socket.addEventListener("message",this.serverKeyHandler),this.socket.addEventListener("close",(t=>{this.listeners.close.forEach((e=>e(t))),Object.values(this._timers).forEach(clearTimeout)})),this.bufferHandler=e}serverKeyHandler(t){return st(this,void 0,void 0,(function*(){if(this.reading)return this.messageHandler(t);this.reading=!0;const e=yield this.bufferHandler(t);if(e.length<3||"SWS"!=K(e.slice(0,3)))throw this.socket.close(1e3),new Error("The server requested is not a Sonic WS server.");const r=e[3];if(10!=r)throw this.socket.close(1e3),new Error(`Version mismatch: ${r>10?"client":"server"} is outdated (server: ${r}, client: 10)`);const[n,s]=I(e,4),a=e.slice(n,n+s);this.clientPackets.holdPackets(Q.deserializeAll(a,!0));const i=e.slice(n+s,e.length-1);this.serverPackets.holdPackets(Q.deserializeAll(i,!0)),this.id=e[e.length-1],this.batcher.registerSendPackets(this.clientPackets,this),Object.keys(this.preListen).forEach((t=>this.preListen[t].forEach((e=>{if(!this.serverPackets.hasTag(t))return console.error(new Error(`The server does not send the packet with tag "${t}"!`));this.listen(t,e)})))),this.preListen=null,this.pastKeys=!0,this.readyListeners.forEach((t=>t())),this.readyListeners=null,this.socket.removeEventListener("message",this.serverKeyHandler),this.socket.addEventListener("message",this.messageHandler)}))}invalidPacket(t){throw console.log(t),new Error("An error occured with data from the server!! This is probably my fault.. make an issue at https://github.com/cutelittlelily/sonic-ws")}listenPacket(t,e){const r=this.listeners.event[e];if(!r)return console.warn("Warn: No listener for packet "+this.serverPackets.getTag(e));!function(t,e,r){if("string"==typeof t)return r(t);const[n,s]=t;try{s&&Array.isArray(n)?e.forEach((t=>t(...n))):e.forEach((t=>t(n)))}catch(t){r(t)}}(t,r,this.invalidPacket)}messageHandler(t){return st(this,void 0,void 0,(function*(){const e=yield this.bufferHandler(t);if(this.listeners.message.forEach((t=>t(e))),e.length<1)return;const r=e[0],n=e.slice(1),s=this.serverPackets.getPacket(this.serverPackets.getTag(r));if(0==s.dataBatching)return void this.listenPacket(s.listen(n,null),r);const a=nt.unravelBatch(s,n,null);if("string"==typeof a)return this.invalidPacket(a);a.forEach((t=>this.listenPacket(t,r)))}))}listen(t,e){const r=this.serverPackets.getKey(t);null!=r?(this.listeners.event[r]||(this.listeners.event[r]=[]),this.listeners.event[r].push(e)):console.log("Key is not available on server: "+t)}raw_onmessage(t){this.listeners.message.push(t)}send(t,...e){const[r,n,s]=function(t,e,r){const n=t.getKey(e),s=t.getPacket(e);if(s.autoFlatten)r=tt(r[0]);else{if(r.length>s.maxSize)throw new Error(`Packet "${e}" only allows ${s.maxSize} values!`);if(r.length<s.minSize)throw new Error(`Packet "${e}" requires at least ${s.minSize} values!`)}if(s.object){if(r=r.map((t=>Array.isArray(t)?t:[t])),!s.autoFlatten){const t=s.dataMin,n=s.dataMax;for(let s=0;s<t.length;s++){if(r[s].length<t[s])throw new Error(`Section ${s+1} of packet "${e}" requires at least ${t[s]} values!`);if(r[s].length>n[s])throw new Error(`Section ${s+1} of packet "${e}" only allows ${n[s]} values!`)}}}else{const t=r.find((t=>"object"==typeof t&&null!=t));t&&console.warn(`Passing an array will result in undefined behavior (${JSON.stringify(t)}). Spread the array with ...arr`)}return[n,r.length>0?s.processSend(r):[],s]}(this.clientPackets,t,e);0==s.dataBatching?this.raw_send(V(r,n)):this.batcher.batchPacket(r,n)}on_ready(t){this.pastKeys?t():this.readyListeners.push(t)}on_close(t){this.listeners.close.push(t)}on(t,e){if(this.socket.readyState!==WebSocket.OPEN)return this.preListen[t]||(this.preListen[t]=[]),void this.preListen[t].push(e);this.listen(t,e)}raw_send(t){this.socket.send(t)}setTimeout(t,e){const r=setTimeout((()=>{t(),this.clearTimeout(r)}),e);return this.setTimer(r),r}setInterval(t,e){const r=setInterval(t,e);return this.setTimer(r),r}setTimer(t){this._timers[t]=t}clearTimeout(t){clearTimeout(t),delete this._timers[t]}clearInterval(t){this.clearTimeout(t)}close(t,e){this.socket.close(t,e)}}var it=function(t,e,r,n){return new(r||(r=Promise))((function(s,a){function i(t){try{h(n.next(t))}catch(t){a(t)}}function o(t){try{h(n.throw(t))}catch(t){a(t)}}function h(t){var e;t.done?s(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(i,o)}h((n=n.apply(t,e||[])).next())}))};window.SonicWS=class extends at{constructor(t,e){super(new WebSocket(t,e),(t=>it(this,void 0,void 0,(function*(){return new Uint8Array(yield t.data.arrayBuffer())}))))}WrapEnum(t,e){return function(t,e){if(!(e in F[t]))throw new Error(`Value "${e}" does not exist in enum "${t}"`);return F[t][e]}(t,e)}FlattenData(t){return tt(t)}UnFlattenData(t){return et(t)}}})();